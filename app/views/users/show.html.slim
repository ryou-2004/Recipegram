.center_container
  h1.page_title
    | マイページ
  .user_profile_content
    = attachment_image_tag @user, :profile_image, fallback: 'no-image.png', class: "profile_image is-rounded"
    .profile
      .top_profile
        p.user_name = @user.username
        - if current_user != nil
          - if @user == current_user
            p.user_email= @user.email
            td
              = link_to "編集", edit_user_path(@user)
          - else
            - if current_user.following?(@user)
              = button_to "フォロー解除", user_relationships_path(@user.id), method: :delete
            - else
              = button_to "フォローする", user_relationships_path(@user.id), method: :post
      .follow_folloed
        = link_to "#{@user.followings.count}フォロー", user_followings_path(@user.id)
        = link_to "#{@user.followers.count}フォロワー", user_followers_path(@user.id)
      .profile = simple_format @user.profile
  .user_show
    - @user.recipes.each do |recipe|
      .card
        .recipe_img
          = attachment_image_tag recipe, :image
        .buttons 
          = button_to "このレシピを見る", recipe_path(recipe), method: :get
          - if current_user != nil
            - if @user.id == current_user.id
              = button_to "このレシピを編集する", edit_recipe_path(recipe), method: :get
              = button_to "このレシピを削除する", recipe_path(recipe), { method: :delete, form: { data: { turbo_confirm: "本当に削除しますか？" } } }
        p #{recipe.updated_at.strftime("%Y-%m-%d %H:%M")}更新
